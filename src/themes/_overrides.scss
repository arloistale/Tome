
  @mixin btn-shadow($color) {
    background-image: linear-gradient(
      180deg,
      lighten($color, 3%) 0%,
      $color 60%,
      darken($color, 3%) 100%
    );
    filter: none;
  }
  
  .button {
    @each $name, $pair in $colors {
      $color: nth($pair, 1);
      $color-invert: nth($pair, 2);
  
      &.is-#{$name} {
        &:not(.is-outlined):not(.is-inverted) {
          border: 1px solid darken($color, 6.5%);
          @include btn-shadow($color);
        }
      }
    }
  }
  
  .card .card-header {
    border-bottom: 1px solid $border;
  }
  
  .navbar {
    @include btn-shadow($primary);
    .has-dropdown .navbar-item {
        @include from($navbar-breakpoint) {
        color: $text;
      }
    }
  
    @include until($navbar-breakpoint) {
      .navbar-menu {
        background-color: inherit;
      }
    }
  
    .navbar-burger span {
      background-color: $navbar-item-color;
    }
  
    @each $name, $pair in $colors {
      $color: nth($pair, 1);
      $color-invert: nth($pair, 2);
  
      &.is-#{$name} {
        @include btn-shadow($color);
        @include until($navbar-breakpoint) {
          .navbar-item,
          .navbar-link {
            color: rgba($color-invert, 0.7);
  
            &.is-active {
              color: $color-invert;
            }
          }
  
          .navbar-burger span {
            background-color: $color-invert;
          }
        }
      }
    }
  }
  
  .hero {
    // Colors
    .navbar {
      background-color: $primary;
      @include btn-shadow($primary);
    }
    @each $name, $pair in $colors {
      $color: nth($pair, 1);
      $color-invert: nth($pair, 2);
  
      &.is-#{$name} {
        .navbar {
          background: none;
        }
      }
    }
  }